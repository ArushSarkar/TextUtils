{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","className","style","backgroundColor","mode","color","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","href","title","aria-label","react_router_dom","to","onClick","toggleMode","role","aria-checked","htmlFor","searchBar","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","marginTop","heading","rows","onChange","event","target","value","newText","toUpperCase","showAlert","toLowerCase","split","join","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","length","Alert","alert","position","bottom","right","zIndex","word","lower","capitalize","msg","defaultProps","aboutText","buttonName","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","react_router","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1dc4a869.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setmyStyle] = useState(\r\n  //   {\r\n  //     backgroundColor: \"white\",\r\n  //     color: \"black\",\r\n  //   }\r\n  // );\r\n  // const [myText, setmyText] = useState(\"Enable Dark Mode\");\r\n\r\n  // const toggleStyle = () => {\r\n  //   if(myStyle.color === \"white\"){\r\n  //     setmyStyle({\r\n  //       backgroundColor: \"white\",\r\n  //       color: \"black\",\r\n  //     })\r\n  //     setmyText(\"Enable Dark Mode\");\r\n  //   }\r\n  //   else{\r\n  //     setmyStyle({\r\n  //       backgroundColor: \"black\",\r\n  //       color: \"white\",\r\n  //     })\r\n  //     setmyText(\"Enable Light Mode\");\r\n  //   }\r\n  // }\r\n  \r\n  return (\r\n    <div className='container' style={{backgroundColor: props.mode === 'light'?'#FFF':'#000', color: props.mode === 'dark'?'#FFF':'#000'}}>\r\n    <h1 className='my-3'>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={{backgroundColor: props.mode === 'dark'?'#212529':'#FFF'}}>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" style={{backgroundColor: props.mode === 'light'?'#FFF':'#212529',color: props.mode === 'dark'?'#FFF':'#212529'}}  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                Accordion Item #1\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={{backgroundColor: props.mode === 'light'?'#FFF':'#212529',color: props.mode === 'dark'?'#FFF':'#212529'}}>\r\n                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" style={{backgroundColor: props.mode === 'light'?'#FFF':'#212529',color: props.mode === 'dark'?'#FFF':'#212529'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                Accordion Item #2\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={{backgroundColor: props.mode === 'light'?'#FFF':'#212529',color: props.mode === 'dark'?'#FFF':'#212529'}}>\r\n                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" style={{backgroundColor: props.mode === 'light'?'#FFF':'#212529',color: props.mode === 'dark'?'#FFF':'#212529'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Accordion Item #3\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={{backgroundColor: props.mode === 'light'?'#FFF':'#212529',color: props.mode === 'dark'?'#FFF':'#212529'}}>\r\n                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"mt-3\">\r\n        <button type='button' onClick={toggleStyle} className='btn btn-primary'>{myText}</button>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar fixed-top  navbar-expand-lg bg-${props.mode} text-${props.mode === 'light'?'dark':'light'}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className={`navbar-brand text-${props.mode === 'light'?'dark':'light'}`} href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link  text-${props.mode === 'light'?'dark':'light'}`}  to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link  text-${props.mode === 'light'?'dark':'light'}`}  to=\"/about\">About</Link>\r\n        </li>\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className={`nav-link dropdown-toggle text-${props.mode === 'light'?'dark':'light'}`}href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            {props.aboutText}\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li> */}\r\n      </ul>\r\n      <div className=\"form-check form-switch\">\r\n        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckChecked\" aria-checked/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">{(props.mode === \"dark\") ? \"Disable Dark\" : \"Enable Dark\"}</label>\r\n      </div>\r\n      { props.searchBar ?  <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>: \"\"}\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string,\r\n    searchBar: PropTypes.bool,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About Us\",\r\n    searchBar: true\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked!\");\r\n        let newText = text.toUpperCase();\r\n\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case\", \"warning\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was clicked!\");\r\n        let newText = text.toLowerCase();\r\n\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lower case\", \"warning\");\r\n    }\r\n    const handleCaptilized = () => {\r\n        // console.log(\"Uppercase was clicked!\");\r\n        let newText = text.charAt(0).toUpperCase()+text.slice(1);\r\n\r\n        setText(newText);\r\n        props.showAlert(\"Content has been capitalized\", \"warning\");\r\n    }\r\n    const handleClear = () => {\r\n        // console.log(\"Uppercase was clicked!\");\r\n        let newText = \"\";\r\n\r\n        setText(newText);\r\n        props.showAlert(\"All contents are cleared\", \"warning\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Changed! \");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\", \"warning\");\r\n    }\r\n    const handleExtraSpace = ()=>{\r\n        var newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces has been removed\", \"warning\");\r\n    }\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode === 'dark'?'#FFF':'#212529', marginTop: '80px'}}>\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n            <label htmlFor=\"myBox\" className=\"form-label\" >{props.title}</label>\r\n            <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" onChange={handleOnChange} value={text} placeholder=\"Enter the text here\" style={{backgroundColor: props.mode === 'dark'?'#212529':'#FFF',color: props.mode === 'light'?'#212529':'#FFF'}}></textarea>\r\n            <button className=\"btn btn-primary my-3 mx-1\" onClick={handleUpClick}>Uppercase</button>\r\n            <button className=\"btn btn-primary my-3 mx-1\" onClick={handleLoClick}>Lowercase</button>\r\n            <button className=\"btn btn-dark my-3 mx-1\" onClick={handleExtraSpace}>Remove Extra Space</button>\r\n            <button className=\"btn btn-warning my-3 mx-1\" onClick={handleCaptilized}>Captilized</button>\r\n            <button className=\"btn btn-success my-3 mx-1\" onClick={handleCopy}>Copy</button>\r\n            <button className=\"btn btn-danger my-3 mx-1\" onClick={handleClear}>Clear</button>\r\n        </div>\r\n    </div>\r\n    <div className=\"container\" style={{color: props.mode === 'dark'?'#FFF':'#212529'}}>\r\n        <h6>Your text summary</h6>\r\n        <p><i>{text.split(\" \").length} words and {text.length} characters</i></p>\r\n        <p><i>Required {0.008 * text.split(\" \").length} minutes to read.</i></p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n  \r\n  \r\n\r\nTextForm.defaultProps = {\r\n    heading: \"Text Form Heading\",\r\n    title: \"Set title here\",\r\n    buttonName: \"Button\"\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    //Captital first word rest lower\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    //end Example: - {capitalize(props.alert.type)}\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" style={{marginTop: '56px',position:'fixed',bottom:'0',right:'10px',zIndex:'9999'}}>\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react'\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  }\n\n  setTimeout(() => {\n    setAlert(null);\n  }, 15000);\n\n\n  const toggleMode = ()=> {\n    if(mode === \"dark\"){\n      setMode(\"light\");\n      document.body.style.backgroundColor = '#FFFFFF';\n      showAlert(\"Dark mode is disabled\", \"success\");\n      document.title = 'TextUtils - Home';\n    }\n    else{\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#000';\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = 'TextUtils - Home (dark)';\n    }\n  }\n  return (\n    <>\n    {/* <BrowserRouter>\n    <Router>\n      <Navbar title=\"TextUtils\" aboutText=\"About\" searchBar={false} mode={mode} toggleMode={toggleMode}/>\n      <div className=\"container my-3\">\n        <Switch>\n          <Route path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" title={false} mode={mode}/>\n          </Route>\n          <Route path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n        </Switch>\n      <Alert alert={alert}/>\n      </div>\n    </Router>\n    </BrowserRouter> */}\n        <Router>\n      <Navbar title=\"TextUtils\" aboutText=\"About\" searchBar={false} mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <Routes>\n              <Route path=\"/about\" element= { <About mode={mode}/>}>\n              \n              </Route>\n              <Route path=\"/\" element= {<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" title={false} mode={mode}/>}>\n              \n              </Route>\n        </Routes>\n      </div>\n      \n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}